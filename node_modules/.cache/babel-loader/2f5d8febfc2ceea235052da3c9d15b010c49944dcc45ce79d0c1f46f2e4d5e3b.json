{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thiag\\\\Desktop\\\\WEB DEVELOPMENT COURSE NCI\\\\PROJECT\\\\SOFTWARE\\\\tablequestapp\\\\src\\\\components\\\\ManageGames.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BOARDGAMES_URL = \"http://localhost:4000/boardgames\";\nfunction ManageGames() {\n  _s();\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [maxPlayers, setMaxPlayers] = useState('');\n  const [boardgames, setBoardgames] = useState([]);\n  useEffect(() => {\n    fetchBoardgames();\n  }, []);\n  const fetchBoardgames = async () => {\n    try {\n      const response = await axios.get(API_BOARDGAMES_URL);\n      setBoardgames(response.data);\n    } catch (error) {\n      console.error(error);\n      // Handle error if needed\n    }\n  };\n\n  const handleTitleChange = e => {\n    setTitle(e.target.value);\n  };\n  const handleDescriptionChange = e => {\n    setDescription(e.target.value);\n  };\n  const handleMaxPlayersChange = e => {\n    setMaxPlayers(e.target.value);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Validate inputs before submitting\n    if (!title || !description || !maxPlayers) {\n      alert('Please fill in all fields.');\n      return;\n    }\n    try {\n      // Create a new boardgame entry\n      await axios.post(API_BOARDGAMES_URL, {\n        title,\n        description,\n        maxPlayers: parseInt(maxPlayers)\n      });\n\n      // Fetch updated boardgames list after successful creation\n      fetchBoardgames();\n\n      // Clear the input fields after successful creation\n      setTitle('');\n      setDescription('');\n      setMaxPlayers('');\n    } catch (error) {\n      console.error(error);\n      // Handle error if needed\n    }\n  };\n\n  const handleDelete = async boardgameId => {\n    try {\n      // Delete the boardgame with the given ID\n      await axios.delete(`${API_BOARDGAMES_URL}/${boardgameId}`);\n\n      // Fetch updated boardgames list after successful deletion\n      fetchBoardgames();\n    } catch (error) {\n      console.error(error);\n      // Handle error if needed\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Manage Boardgames\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Title:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: title,\n          onChange: handleTitleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Description:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: description,\n          onChange: handleDescriptionChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Max Players:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: maxPlayers,\n          onChange: handleMaxPlayersChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Create Boardgame\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Existing Boardgames\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), boardgames.map(boardgame => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Title: \", boardgame.title]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Description: \", boardgame.description]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Max Players: \", boardgame.maxPlayers]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDelete(boardgame.id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }, this)]\n      }, boardgame.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n}\n_s(ManageGames, \"ZW/8cA20KD8m2r/I8fG5y69PVDs=\");\n_c = ManageGames;\nexport default ManageGames;\nvar _c;\n$RefreshReg$(_c, \"ManageGames\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","API_BOARDGAMES_URL","ManageGames","_s","title","setTitle","description","setDescription","maxPlayers","setMaxPlayers","boardgames","setBoardgames","fetchBoardgames","response","get","data","error","console","handleTitleChange","e","target","value","handleDescriptionChange","handleMaxPlayersChange","handleSubmit","preventDefault","alert","post","parseInt","handleDelete","boardgameId","delete","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","map","boardgame","onClick","id","_c","$RefreshReg$"],"sources":["C:/Users/thiag/Desktop/WEB DEVELOPMENT COURSE NCI/PROJECT/SOFTWARE/tablequestapp/src/components/ManageGames.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst API_BOARDGAMES_URL = \"http://localhost:4000/boardgames\";\r\n\r\nfunction ManageGames() {\r\n  const [title, setTitle] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const [maxPlayers, setMaxPlayers] = useState('');\r\n  const [boardgames, setBoardgames] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetchBoardgames();\r\n  }, []);\r\n\r\n  const fetchBoardgames = async () => {\r\n    try {\r\n      const response = await axios.get(API_BOARDGAMES_URL);\r\n      setBoardgames(response.data);\r\n    } catch (error) {\r\n      console.error(error);\r\n      // Handle error if needed\r\n    }\r\n  };\r\n\r\n  const handleTitleChange = (e) => {\r\n    setTitle(e.target.value);\r\n  };\r\n\r\n  const handleDescriptionChange = (e) => {\r\n    setDescription(e.target.value);\r\n  };\r\n\r\n  const handleMaxPlayersChange = (e) => {\r\n    setMaxPlayers(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    // Validate inputs before submitting\r\n    if (!title || !description || !maxPlayers) {\r\n      alert('Please fill in all fields.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // Create a new boardgame entry\r\n      await axios.post(API_BOARDGAMES_URL, {\r\n        title,\r\n        description,\r\n        maxPlayers: parseInt(maxPlayers),\r\n      });\r\n\r\n      // Fetch updated boardgames list after successful creation\r\n      fetchBoardgames();\r\n\r\n      // Clear the input fields after successful creation\r\n      setTitle('');\r\n      setDescription('');\r\n      setMaxPlayers('');\r\n    } catch (error) {\r\n      console.error(error);\r\n      // Handle error if needed\r\n    }\r\n  };\r\n\r\n  const handleDelete = async (boardgameId) => {\r\n    try {\r\n      // Delete the boardgame with the given ID\r\n      await axios.delete(`${API_BOARDGAMES_URL}/${boardgameId}`);\r\n\r\n      // Fetch updated boardgames list after successful deletion\r\n      fetchBoardgames();\r\n    } catch (error) {\r\n      console.error(error);\r\n      // Handle error if needed\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Manage Boardgames</h1>\r\n      <form onSubmit={handleSubmit}>\r\n        <div>\r\n          <label>Title:</label>\r\n          <input\r\n            type=\"text\"\r\n            value={title}\r\n            onChange={handleTitleChange}\r\n          />\r\n        </div>\r\n        <div>\r\n          <label>Description:</label>\r\n          <textarea\r\n            value={description}\r\n            onChange={handleDescriptionChange}\r\n          />\r\n        </div>\r\n        <div>\r\n          <label>Max Players:</label>\r\n          <input\r\n            type=\"number\"\r\n            value={maxPlayers}\r\n            onChange={handleMaxPlayersChange}\r\n          />\r\n        </div>\r\n        <button type=\"submit\">Create Boardgame</button>\r\n      </form>\r\n      <div>\r\n        <h2>Existing Boardgames</h2>\r\n        {boardgames.map((boardgame) => (\r\n          <div key={boardgame.id}>\r\n            <p>Title: {boardgame.title}</p>\r\n            <p>Description: {boardgame.description}</p>\r\n            <p>Max Players: {boardgame.maxPlayers}</p>\r\n            <button onClick={() => handleDelete(boardgame.id)}>Delete</button>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ManageGames;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}