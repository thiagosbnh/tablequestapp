{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thiag\\\\Desktop\\\\WEB DEVELOPMENT COURSE NCI\\\\PROJECT\\\\SOFTWARE\\\\tablequestapp\\\\src\\\\components\\\\Bookings.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BOOKINGS_URL = \"http://localhost:4000/bookings\";\nconst API_BOARDGAMES_URL = \"http://localhost:4000/boardgames\";\nconst API_TABLES_URL = \"http://localhost:4000/tables\";\nfunction Bookings() {\n  _s();\n  const [bookings, setBookings] = useState([]);\n  const [tables, setTables] = useState([]);\n  const [boardgames, setBoardgames] = useState([]);\n  useEffect(() => {\n    // Fetch bookings data\n    axios.get(API_BOOKINGS_URL).then(response => setBookings(response.data)).catch(error => {\n      console.error(error);\n      // Handle error if needed\n    });\n\n    // Fetch boardgames data\n    axios.get(API_BOARDGAMES_URL).then(response => setBoardgames(response.data)).catch(error => {\n      console.error(error);\n      // Handle error if needed\n    });\n\n    // Fetch table data\n    axios.get(API_TABLES_URL).then(response => setTables(response.data)).catch(error => {\n      console.error(error);\n      // Handle error if needed\n    });\n  }, []);\n  const formatTime = timeString => {\n    const date = new Date(timeString);\n    const hours = date.getHours();\n    const minutes = date.getMinutes();\n    return `${hours}:${minutes < 10 ? '0' + minutes : minutes}`;\n  };\n  const formatDate = dateString => {\n    const date = new Date(dateString);\n    const day = date.getDate();\n    const month = date.getMonth() + 1;\n    const year = date.getFullYear();\n    return `${day}/${month}/${year}`;\n  };\n  const getBoardgameDescription = boardgameId => {\n    const boardgameDesc = boardgames.find(game => game.id === boardgameId);\n    return boardgameDesc ? boardgameDesc.description : '';\n  };\n  const getBoardgameTitle = boardgameId => {\n    const boardgameTitle = boardgames.find(game => game.id === boardgameId);\n    return boardgameTitle ? boardgameTitle.title : '';\n  };\n  const getBoardgameMaxPlayers = boardgameId => {\n    const boardgameMaxPlayers = boardgames.find(game => game.id === boardgameId);\n    return boardgameMaxPlayers ? boardgameMaxPlayers.maxPlayers : '';\n  };\n  const getTableMaxGuests = tableId => {\n    const tableMaxGuests = tables.find(table => table.id === tableId);\n    return tableMaxGuests ? tableMaxGuests.maxGuests : '';\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Bookings from API\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), bookings.map(booking => {\n      const boardgameDescription = getBoardgameDescription(booking.boardgameId);\n      const boardgameTitle = getBoardgameTitle(booking.boardgameId);\n      const boardgameMaxPlayers = getBoardgameMaxPlayers(booking.boardgameId);\n      const tableMaxGuests = getTableMaxGuests(booking.tableId);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Booking #\", booking.id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"User ID: \", booking.userId]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Table: \", booking.tableId, \" / Maximum \", tableMaxGuests, \" guests\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Boardgame: \", boardgameTitle, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 44\n          }, this), \" \", boardgameDescription, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 73\n          }, this), \" Max Players: \", boardgameMaxPlayers]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Date: \", formatDate(booking.bookingDate)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Start: \", formatTime(booking.bookingStart), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 15\n          }, this), \"End: \", formatTime(booking.bookingFinish)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this)]\n      }, booking.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n}\n_s(Bookings, \"B7lYKFbIVWmCxeYEkTdo06eYyf0=\");\n_c = Bookings;\nexport default Bookings;\nvar _c;\n$RefreshReg$(_c, \"Bookings\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","API_BOOKINGS_URL","API_BOARDGAMES_URL","API_TABLES_URL","Bookings","_s","bookings","setBookings","tables","setTables","boardgames","setBoardgames","get","then","response","data","catch","error","console","formatTime","timeString","date","Date","hours","getHours","minutes","getMinutes","formatDate","dateString","day","getDate","month","getMonth","year","getFullYear","getBoardgameDescription","boardgameId","boardgameDesc","find","game","id","description","getBoardgameTitle","boardgameTitle","title","getBoardgameMaxPlayers","boardgameMaxPlayers","maxPlayers","getTableMaxGuests","tableId","tableMaxGuests","table","maxGuests","children","fileName","_jsxFileName","lineNumber","columnNumber","map","booking","boardgameDescription","userId","bookingDate","bookingStart","bookingFinish","_c","$RefreshReg$"],"sources":["C:/Users/thiag/Desktop/WEB DEVELOPMENT COURSE NCI/PROJECT/SOFTWARE/tablequestapp/src/components/Bookings.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst API_BOOKINGS_URL = \"http://localhost:4000/bookings\";\r\nconst API_BOARDGAMES_URL = \"http://localhost:4000/boardgames\";\r\nconst API_TABLES_URL = \"http://localhost:4000/tables\";\r\n\r\nfunction Bookings() {\r\n  const [bookings, setBookings] = useState([]);\r\n  const [tables, setTables] = useState([]);\r\n  const [boardgames, setBoardgames] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Fetch bookings data\r\n    axios.get(API_BOOKINGS_URL)\r\n      .then((response) => setBookings(response.data))\r\n      .catch((error) => {\r\n        console.error(error);\r\n        // Handle error if needed\r\n      });\r\n\r\n    // Fetch boardgames data\r\n    axios.get(API_BOARDGAMES_URL)\r\n      .then((response) => setBoardgames(response.data))\r\n      .catch((error) => {\r\n        console.error(error);\r\n        // Handle error if needed\r\n      });\r\n\r\n    // Fetch table data\r\n    axios.get(API_TABLES_URL)\r\n    .then((response) => setTables(response.data))\r\n    .catch((error) => {\r\n      console.error(error);\r\n      // Handle error if needed\r\n    });\r\n\r\n  }, []);\r\n\r\n  const formatTime = (timeString) => {\r\n    const date = new Date(timeString);\r\n    const hours = date.getHours();\r\n    const minutes = date.getMinutes();\r\n    return `${hours}:${minutes < 10 ? '0' + minutes : minutes}`;\r\n  };\r\n\r\n  const formatDate = (dateString) => {\r\n    const date = new Date(dateString);\r\n    const day = date.getDate();\r\n    const month = date.getMonth() + 1;\r\n    const year = date.getFullYear();\r\n    return `${day}/${month}/${year}`;\r\n  };\r\n\r\n  const getBoardgameDescription = (boardgameId) => {\r\n    const boardgameDesc = boardgames.find((game) => game.id === boardgameId);\r\n    return boardgameDesc ? boardgameDesc.description : '';\r\n  };\r\n\r\n  const getBoardgameTitle = (boardgameId) => {\r\n    const boardgameTitle = boardgames.find((game) => game.id === boardgameId);\r\n    return boardgameTitle ? boardgameTitle.title : '';\r\n  };\r\n\r\n  const getBoardgameMaxPlayers = (boardgameId) => {\r\n    const boardgameMaxPlayers = boardgames.find((game) => game.id === boardgameId);\r\n    return boardgameMaxPlayers ? boardgameMaxPlayers.maxPlayers : '';\r\n  };\r\n\r\n  const getTableMaxGuests = (tableId) => {\r\n    const tableMaxGuests = tables.find((table) => table.id === tableId);\r\n    return tableMaxGuests ? tableMaxGuests.maxGuests : '';\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Bookings from API</h1>\r\n      {bookings.map((booking) => {\r\n        const boardgameDescription = getBoardgameDescription(booking.boardgameId);\r\n        const boardgameTitle = getBoardgameTitle(booking.boardgameId);\r\n        const boardgameMaxPlayers = getBoardgameMaxPlayers(booking.boardgameId);\r\n        const tableMaxGuests = getTableMaxGuests(booking.tableId);\r\n\r\n        return (\r\n          <div key={booking.id}>\r\n            <h2>Booking #{booking.id}</h2>\r\n            <h3>User ID: {booking.userId}</h3>\r\n            <p>Table: {booking.tableId} / Maximum {tableMaxGuests} guests</p>\r\n            <p>Boardgame: {boardgameTitle} <br/> {boardgameDescription} <br/> Max Players: {boardgameMaxPlayers}</p>\r\n            <p>Date: {formatDate(booking.bookingDate)}</p>\r\n            <p>\r\n              Start: {formatTime(booking.bookingStart)}\r\n              <br />\r\n              End: {formatTime(booking.bookingFinish)}\r\n            </p>\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Bookings;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}