{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thiag\\\\Desktop\\\\WEB DEVELOPMENT COURSE NCI\\\\PROJECT\\\\SOFTWARE\\\\tablequestapp\\\\src\\\\components\\\\LoginForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LoginForm(_ref) {\n  _s();\n  let {\n    onLogin\n  } = _ref;\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [message, setMessage] = useState('');\n  useEffect(() => {\n    checkLoginStatus();\n  }, []);\n  const checkLoginStatus = () => {\n    // Check if the user is already logged in (e.g., token or session exists)\n    const isLoggedIn = sessionStorage.getItem('isLoggedIn');\n    if (isLoggedIn === 'true') {\n      // User is logged in, trigger the onLogin function\n      onLogin();\n    }\n  };\n  const handleLogin = async () => {\n    const loginData = {\n      user: {\n        email: email,\n        password: password\n      }\n    };\n    try {\n      const response = await fetch('http://localhost:4000/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(loginData)\n      });\n      if (response.ok) {\n        // Successful login\n        const authToken = response.headers.get('Authorization'); // Retrieve the authorization header\n        setMessage('Logged in successfully');\n        sessionStorage.setItem('isLoggedIn', 'true'); // Store login status\n        sessionStorage.setItem('authToken', authToken); // Store the authorization header\n\n        // Retrieve user ID\n        const userResponse = await fetch('http://localhost:4000/current_user', {\n          headers: {\n            'Authorization': authToken\n          }\n        });\n        if (userResponse.ok) {\n          const userData = await userResponse.json();\n          const userId = userData.id; // Assuming the user ID is returned as 'id'\n          sessionStorage.setItem('userId', userId); // Store the user ID\n        } else {\n          console.error('Failed to fetch user data');\n        }\n        onLogin();\n      } else {\n        // Failed login\n        setMessage('Invalid email or password');\n      }\n    } catch (error) {\n      console.error(error);\n      setMessage('An error occurred');\n    }\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    handleLogin();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          value: email,\n          onChange: e => setEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n}\n_s(LoginForm, \"Oh/VDqFOsvuHSshpbrRG5GmxLuc=\");\n_c = LoginForm;\nexport default LoginForm;\nvar _c;\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","LoginForm","_ref","_s","onLogin","email","setEmail","password","setPassword","message","setMessage","checkLoginStatus","isLoggedIn","sessionStorage","getItem","handleLogin","loginData","user","response","fetch","method","headers","body","JSON","stringify","ok","authToken","get","setItem","userResponse","userData","json","userId","id","console","error","handleSubmit","e","preventDefault","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","_c","$RefreshReg$"],"sources":["C:/Users/thiag/Desktop/WEB DEVELOPMENT COURSE NCI/PROJECT/SOFTWARE/tablequestapp/src/components/LoginForm.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nfunction LoginForm({ onLogin }) {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [message, setMessage] = useState('');\r\n\r\n  useEffect(() => {\r\n    checkLoginStatus();\r\n  }, []);\r\n\r\n  const checkLoginStatus = () => {\r\n    // Check if the user is already logged in (e.g., token or session exists)\r\n    const isLoggedIn = sessionStorage.getItem('isLoggedIn');\r\n\r\n    if (isLoggedIn === 'true') {\r\n      // User is logged in, trigger the onLogin function\r\n      onLogin();\r\n    }\r\n  };\r\n\r\n  const handleLogin = async () => {\r\n    const loginData = {\r\n      user: {\r\n        email: email,\r\n        password: password,\r\n      },\r\n    };\r\n\r\n    try {\r\n      const response = await fetch('http://localhost:4000/login', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(loginData),\r\n      });\r\n\r\n      if (response.ok) {\r\n        // Successful login\r\n        const authToken = response.headers.get('Authorization'); // Retrieve the authorization header\r\n        setMessage('Logged in successfully');\r\n        sessionStorage.setItem('isLoggedIn', 'true'); // Store login status\r\n        sessionStorage.setItem('authToken', authToken); // Store the authorization header\r\n\r\n        // Retrieve user ID\r\n        const userResponse = await fetch('http://localhost:4000/current_user', {\r\n          headers: {\r\n            'Authorization': authToken,\r\n          },\r\n        });\r\n\r\n        if (userResponse.ok) {\r\n          const userData = await userResponse.json();\r\n          const userId = userData.id; // Assuming the user ID is returned as 'id'\r\n          sessionStorage.setItem('userId', userId); // Store the user ID\r\n        } else {\r\n          console.error('Failed to fetch user data');\r\n        }\r\n\r\n        onLogin();\r\n      } else {\r\n        // Failed login\r\n        setMessage('Invalid email or password');\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n      setMessage('An error occurred');\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    handleLogin();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Login</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <div>\r\n          <label>Email:</label>\r\n          <input\r\n            type=\"email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          />\r\n        </div>\r\n        <div>\r\n          <label>Password:</label>\r\n          <input\r\n            type=\"password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n        </div>\r\n        <button type=\"submit\">Login</button>\r\n      </form>\r\n      <p>{message}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LoginForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}