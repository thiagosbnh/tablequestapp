{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thiag\\\\Desktop\\\\WEB DEVELOPMENT COURSE NCI\\\\PROJECT\\\\SOFTWARE\\\\tablequestapp\\\\src\\\\components\\\\BookingForm.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport Navbar from './Navbar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BOOKINGS_URL = \"http://localhost:4000/bookings\";\nconst API_BOARDGAMES_URL = \"http://localhost:4000/boardgames\";\nconst API_TABLES_URL = \"http://localhost:4000/tables\";\nfunction BookingForm() {\n  _s();\n  const [boardgames, setBoardgames] = useState([]);\n  const [tables, setTables] = useState([]);\n  const [bookingData, setBookingData] = useState({\n    userId: sessionStorage.getItem('userId'),\n    tableId: null,\n    boardgameId: null,\n    bookingDate: '',\n    bookingStart: '',\n    bookingFinish: ''\n  });\n  const handleInputChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setBookingData(prevData => ({\n      ...prevData,\n      [name]: value\n    }));\n  };\n  const handleFormSubmit = event => {\n    event.preventDefault();\n    // Send the booking data to the API\n    axios.post(API_BOOKINGS_URL, bookingData, {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => {\n      console.log(response.data);\n      // Clear the form after successful submission\n      setBookingData({\n        userId: 1,\n        tableId: null,\n        boardgameId: null,\n        bookingDate: '',\n        bookingStart: '',\n        bookingFinish: ''\n      });\n    }).catch(error => {\n      console.error(error);\n      // Handle error if needed\n    });\n  };\n\n  useEffect(() => {\n    // Fetch boardgame data\n    axios.get(API_BOARDGAMES_URL).then(response => setBoardgames(response.data)).catch(error => {\n      console.error(error);\n      // Handle error if needed\n    });\n\n    // Fetch table data\n    axios.get(API_TABLES_URL).then(response => setTables(response.data)).catch(error => {\n      console.error(error);\n      // Handle error if needed\n    });\n  }, []);\n\n  // Generate time options for the select menu based on opening and closing hours\n  const generateTimeOptions = () => {\n    const openingHour = 11; // Opening hour (in 24-hour format)\n    const closingHour = 23; // Closing hour (in 24-hour format)\n    const timeOptions = [];\n    for (let hour = openingHour; hour <= closingHour; hour++) {\n      for (let minute = 0; minute <= 45; minute += 15) {\n        const formattedHour = hour.toString().padStart(2, '0');\n        const formattedMinute = minute.toString().padStart(2, '0');\n        const time = `${formattedHour}:${formattedMinute}`;\n        timeOptions.push( /*#__PURE__*/_jsxDEV(\"option\", {\n          value: time,\n          children: time\n        }, time, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this));\n      }\n    }\n    return timeOptions;\n  };\n\n  // Generate end time options based on the selected start time\n  const generateEndTimeOptions = () => {\n    const {\n      bookingStart\n    } = bookingData;\n    if (!bookingStart) return []; // Return an empty array if start time is not selected\n\n    const [startHour, startMinute] = bookingStart.split(':').map(Number);\n    const openingHour = 11; // Opening hour (in 24-hour format)\n    const closingHour = 23; // Closing hour (in 24-hour format)\n    const timeOptions = [];\n    for (let hour = startHour; hour <= closingHour; hour++) {\n      const maxMinute = hour === startHour ? 45 : 45; // Update maxMinute to 45 for all hours\n      for (let minute = hour === startHour ? startMinute : 0; minute <= maxMinute; minute += 15) {\n        const formattedHour = hour.toString().padStart(2, '0');\n        const formattedMinute = minute.toString().padStart(2, '0');\n        const time = `${formattedHour}:${formattedMinute}`;\n        timeOptions.push( /*#__PURE__*/_jsxDEV(\"option\", {\n          value: time,\n          children: time\n        }, time, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this));\n      }\n    }\n    return timeOptions;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"BookingForm\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Create Booking\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleFormSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Table:\", /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"tableId\",\n          value: bookingData.tableId || '',\n          onChange: handleInputChange,\n          required: true,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select a table\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this), tables.map(table => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: table.id,\n            children: [\"Table #\", table.id, \" / Max \", table.maxGuests, \" guests\"]\n          }, table.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Booking Date:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          name: \"bookingDate\",\n          value: bookingData.bookingDate,\n          onChange: handleInputChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Booking Start Time:\", /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"bookingStart\",\n          value: bookingData.bookingStart,\n          onChange: handleInputChange,\n          required: true,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select start time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 13\n          }, this), generateTimeOptions()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Booking End Time:\", /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"bookingFinish\",\n          value: bookingData.bookingFinish,\n          onChange: handleInputChange,\n          required: true,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select end time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 13\n          }, this), generateEndTimeOptions()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Want to include a Boardgame in your booking? (optional)\", /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"boardgameId\",\n          value: bookingData.boardgameId || '',\n          onChange: handleInputChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"No boardgame\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 13\n          }, this), boardgames.map(boardgame => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: boardgame.id,\n            children: [boardgame.title, \" / Max Players: \", boardgame.maxPlayers]\n          }, boardgame.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Create Booking\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 5\n  }, this);\n}\n_s(BookingForm, \"J/Bo8ooOGwOrr08fl2ct68oYJYk=\");\n_c = BookingForm;\nexport default BookingForm;\nvar _c;\n$RefreshReg$(_c, \"BookingForm\");","map":{"version":3,"names":["React","useEffect","useState","axios","Navbar","jsxDEV","_jsxDEV","API_BOOKINGS_URL","API_BOARDGAMES_URL","API_TABLES_URL","BookingForm","_s","boardgames","setBoardgames","tables","setTables","bookingData","setBookingData","userId","sessionStorage","getItem","tableId","boardgameId","bookingDate","bookingStart","bookingFinish","handleInputChange","event","name","value","target","prevData","handleFormSubmit","preventDefault","post","headers","then","response","console","log","data","catch","error","get","generateTimeOptions","openingHour","closingHour","timeOptions","hour","minute","formattedHour","toString","padStart","formattedMinute","time","push","children","fileName","_jsxFileName","lineNumber","columnNumber","generateEndTimeOptions","startHour","startMinute","split","map","Number","maxMinute","className","onSubmit","onChange","required","table","id","maxGuests","type","boardgame","title","maxPlayers","_c","$RefreshReg$"],"sources":["C:/Users/thiag/Desktop/WEB DEVELOPMENT COURSE NCI/PROJECT/SOFTWARE/tablequestapp/src/components/BookingForm.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport Navbar from './Navbar';\r\n\r\nconst API_BOOKINGS_URL = \"http://localhost:4000/bookings\";\r\nconst API_BOARDGAMES_URL = \"http://localhost:4000/boardgames\";\r\nconst API_TABLES_URL = \"http://localhost:4000/tables\";\r\n\r\nfunction BookingForm() {\r\n  const [boardgames, setBoardgames] = useState([]);\r\n  const [tables, setTables] = useState([]);\r\n  const [bookingData, setBookingData] = useState({\r\n    userId: sessionStorage.getItem('userId'),\r\n    tableId: null,\r\n    boardgameId: null,\r\n    bookingDate: '',\r\n    bookingStart: '',\r\n    bookingFinish: '',\r\n  });\r\n\r\n  const handleInputChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setBookingData((prevData) => ({\r\n      ...prevData,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const handleFormSubmit = (event) => {\r\n    event.preventDefault();\r\n    // Send the booking data to the API\r\n    axios.post(API_BOOKINGS_URL, bookingData, {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        // Clear the form after successful submission\r\n        setBookingData({\r\n          userId: 1,\r\n          tableId: null,\r\n          boardgameId: null,\r\n          bookingDate: '',\r\n          bookingStart: '',\r\n          bookingFinish: '',\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n        // Handle error if needed\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Fetch boardgame data\r\n    axios.get(API_BOARDGAMES_URL)\r\n      .then((response) => setBoardgames(response.data))\r\n      .catch((error) => {\r\n        console.error(error);\r\n        // Handle error if needed\r\n      });\r\n\r\n    // Fetch table data\r\n    axios.get(API_TABLES_URL)\r\n      .then((response) => setTables(response.data))\r\n      .catch((error) => {\r\n        console.error(error);\r\n        // Handle error if needed\r\n      });\r\n  }, []);\r\n\r\n   // Generate time options for the select menu based on opening and closing hours\r\n  const generateTimeOptions = () => {\r\n    const openingHour = 11; // Opening hour (in 24-hour format)\r\n    const closingHour = 23; // Closing hour (in 24-hour format)\r\n    const timeOptions = [];\r\n\r\n    for (let hour = openingHour; hour <= closingHour; hour++) {\r\n      for (let minute = 0; minute <= 45; minute += 15) {\r\n        const formattedHour = hour.toString().padStart(2, '0');\r\n        const formattedMinute = minute.toString().padStart(2, '0');\r\n        const time = `${formattedHour}:${formattedMinute}`;\r\n        timeOptions.push(\r\n          <option value={time} key={time}>\r\n            {time}\r\n          </option>\r\n        );\r\n      }\r\n    }\r\n\r\n    return timeOptions;\r\n  };\r\n\r\n  // Generate end time options based on the selected start time\r\n  const generateEndTimeOptions = () => {\r\n    const { bookingStart } = bookingData;\r\n    if (!bookingStart) return []; // Return an empty array if start time is not selected\r\n  \r\n    const [startHour, startMinute] = bookingStart.split(':').map(Number);\r\n    const openingHour = 11; // Opening hour (in 24-hour format)\r\n    const closingHour = 23; // Closing hour (in 24-hour format)\r\n    const timeOptions = [];\r\n  \r\n    for (let hour = startHour; hour <= closingHour; hour++) {\r\n      const maxMinute = (hour === startHour ? 45 : 45); // Update maxMinute to 45 for all hours\r\n      for (let minute = (hour === startHour ? startMinute : 0); minute <= maxMinute; minute += 15) {\r\n        const formattedHour = hour.toString().padStart(2, '0');\r\n        const formattedMinute = minute.toString().padStart(2, '0');\r\n        const time = `${formattedHour}:${formattedMinute}`;\r\n        timeOptions.push(\r\n          <option value={time} key={time}>\r\n            {time}\r\n          </option>\r\n        );\r\n      }\r\n    }\r\n  \r\n    return timeOptions;\r\n  };\r\n\r\n  return (\r\n    <div className=\"BookingForm\">\r\n      <Navbar />\r\n      <h1>Create Booking</h1>\r\n      <form onSubmit={handleFormSubmit}>\r\n        <label>\r\n          Table:\r\n          <select\r\n            name=\"tableId\"\r\n            value={bookingData.tableId || ''}\r\n            onChange={handleInputChange}\r\n            required\r\n          >\r\n            <option value=\"\">Select a table</option>\r\n            {tables.map((table) => (\r\n              <option key={table.id} value={table.id}>\r\n                Table #{table.id} / Max {table.maxGuests} guests\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </label>\r\n        <br />\r\n        \r\n        <label>\r\n          Booking Date:\r\n          <input\r\n            type=\"date\"\r\n            name=\"bookingDate\"\r\n            value={bookingData.bookingDate}\r\n            onChange={handleInputChange}\r\n            required\r\n          />\r\n        </label>\r\n        <br />\r\n        <label>\r\n          Booking Start Time:\r\n          <select\r\n            name=\"bookingStart\"\r\n            value={bookingData.bookingStart}\r\n            onChange={handleInputChange}\r\n            required\r\n          >\r\n            <option value=\"\">Select start time</option>\r\n            {generateTimeOptions()}\r\n          </select>\r\n        </label>\r\n        <br />\r\n        <label>\r\n          Booking End Time:\r\n          <select\r\n            name=\"bookingFinish\"\r\n            value={bookingData.bookingFinish}\r\n            onChange={handleInputChange}\r\n            required\r\n          >\r\n            <option value=\"\">Select end time</option>\r\n            {generateEndTimeOptions()}\r\n          </select>\r\n        </label>\r\n        <br />\r\n        <br />\r\n        <label>\r\n          Want to include a Boardgame in your booking? (optional)\r\n          <select\r\n            name=\"boardgameId\"\r\n            value={bookingData.boardgameId || ''}\r\n            onChange={handleInputChange}\r\n          >\r\n            <option value=\"\">No boardgame</option>\r\n            {boardgames.map((boardgame) => (\r\n              <option key={boardgame.id} value={boardgame.id}>\r\n                {boardgame.title} / Max Players: {boardgame.maxPlayers}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </label>\r\n        <br />\r\n        <br />\r\n        <button type=\"submit\">Create Booking</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BookingForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}