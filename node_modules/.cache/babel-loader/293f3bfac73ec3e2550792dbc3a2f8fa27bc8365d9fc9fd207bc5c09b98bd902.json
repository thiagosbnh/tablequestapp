{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thiag\\\\Desktop\\\\WEB DEVELOPMENT COURSE NCI\\\\PROJECT\\\\SOFTWARE\\\\tablequest\\\\tablequestapp\\\\src\\\\components\\\\BookingForm.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport BoardgameSelect from './BoardgameSelect';\nimport DateTimeSelect from './DateTimeSelect';\nimport TableSelect from './TableSelect';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BOOKINGS_URL = \"http://localhost:3000/api/v1/bookings\";\nconst API_BOARDGAMES_URL = \"http://localhost:3000/api/v1/boardgames\";\nconst API_TABLES_URL = \"http://localhost:3000/api/v1/tables\";\nfunction BookingForm() {\n  _s();\n  const [boardgames, setBoardgames] = useState([]);\n  const [tables, setTables] = useState([]);\n  const [bookingData, setBookingData] = useState({\n    userId: 1,\n    // to be replaced with the actual user ID from authentication later \n    tableId: null,\n    boardgameId: null,\n    bookingDate: '',\n    bookingStart: '',\n    bookingFinish: ''\n  });\n  const handleInputChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setBookingData(prevData => ({\n      ...prevData,\n      [name]: value\n    }));\n  };\n  const handleFormSubmit = event => {\n    event.preventDefault();\n    // Send the booking data to the API\n    axios.post(API_BOOKINGS_URL, bookingData, {\n      headers: {\n        'Content-Type': 'BookingFormlication/json'\n      }\n    }).then(response => {\n      console.log(response.data);\n      // Clear the form after successful submission\n      setBookingData({\n        userId: 1,\n        tableId: null,\n        boardgameId: null,\n        bookingDate: '',\n        bookingStart: '',\n        bookingFinish: ''\n      });\n    }).catch(error => {\n      console.error(error);\n      // Handle error if needed\n    });\n  };\n\n  useEffect(() => {\n    // Fetch boardgame data\n    axios.get(API_BOARDGAMES_URL).then(response => setBoardgames(response.data)).catch(error => {\n      console.error(error);\n      // Handle error if needed\n    });\n\n    // Fetch table data\n    axios.get(API_TABLES_URL).then(response => setTables(response.data)).catch(error => {\n      console.error(error);\n      // Handle error if needed\n    });\n  }, []);\n\n  // Generate time options for the select menu based on opening and closing hours\n  const generateTimeOptions = () => {\n    const openingHour = 11; // Opening hour (in 24-hour format)\n    const closingHour = 23; // Closing hour (in 24-hour format)\n    const timeOptions = [];\n    for (let hour = openingHour; hour <= closingHour; hour++) {\n      for (let minute = 0; minute <= 45; minute += 15) {\n        const formattedHour = hour.toString().padStart(2, '0');\n        const formattedMinute = minute.toString().padStart(2, '0');\n        const time = `${formattedHour}:${formattedMinute}`;\n        timeOptions.push( /*#__PURE__*/_jsxDEV(\"option\", {\n          value: time,\n          children: time\n        }, time, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this));\n      }\n    }\n    return timeOptions;\n  };\n\n  // Generate end time options based on the selected start time\n  const generateEndTimeOptions = () => {\n    const {\n      bookingStart\n    } = bookingData;\n    if (!bookingStart) return []; // Return an empty array if start time is not selected\n\n    const [startHour, startMinute] = bookingStart.split(':').map(Number);\n    const openingHour = 11; // Opening hour (in 24-hour format)\n    const closingHour = 23; // Closing hour (in 24-hour format)\n    const timeOptions = [];\n    for (let hour = startHour; hour <= closingHour; hour++) {\n      const maxMinute = hour === startHour ? 45 : 60; // Allow full hour only for the start hour\n      for (let minute = hour === startHour ? startMinute : 0; minute <= maxMinute; minute += 15) {\n        const formattedHour = hour.toString().padStart(2, '0');\n        const formattedMinute = minute.toString().padStart(2, '0');\n        const time = `${formattedHour}:${formattedMinute}`;\n        timeOptions.push( /*#__PURE__*/_jsxDEV(\"option\", {\n          value: time,\n          children: time\n        }, time, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this));\n      }\n    }\n    return timeOptions;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"BookingForm\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Create Booking\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleFormSubmit,\n      children: [/*#__PURE__*/_jsxDEV(TableSelect, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DateTimeSelect, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(BoardgameSelect, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Create Booking\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 5\n  }, this);\n}\n_s(BookingForm, \"RzQFdLfW/jpwkFjETvRoVeKpcYU=\");\n_c = BookingForm;\nexport default BookingForm;\nvar _c;\n$RefreshReg$(_c, \"BookingForm\");","map":{"version":3,"names":["React","useEffect","useState","axios","BoardgameSelect","DateTimeSelect","TableSelect","jsxDEV","_jsxDEV","API_BOOKINGS_URL","API_BOARDGAMES_URL","API_TABLES_URL","BookingForm","_s","boardgames","setBoardgames","tables","setTables","bookingData","setBookingData","userId","tableId","boardgameId","bookingDate","bookingStart","bookingFinish","handleInputChange","event","name","value","target","prevData","handleFormSubmit","preventDefault","post","headers","then","response","console","log","data","catch","error","get","generateTimeOptions","openingHour","closingHour","timeOptions","hour","minute","formattedHour","toString","padStart","formattedMinute","time","push","children","fileName","_jsxFileName","lineNumber","columnNumber","generateEndTimeOptions","startHour","startMinute","split","map","Number","maxMinute","className","onSubmit","type","_c","$RefreshReg$"],"sources":["C:/Users/thiag/Desktop/WEB DEVELOPMENT COURSE NCI/PROJECT/SOFTWARE/tablequest/tablequestapp/src/components/BookingForm.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport BoardgameSelect from './BoardgameSelect';\r\nimport DateTimeSelect from './DateTimeSelect';\r\nimport TableSelect from './TableSelect';\r\n\r\nconst API_BOOKINGS_URL = \"http://localhost:3000/api/v1/bookings\";\r\nconst API_BOARDGAMES_URL = \"http://localhost:3000/api/v1/boardgames\";\r\nconst API_TABLES_URL = \"http://localhost:3000/api/v1/tables\";\r\n\r\nfunction BookingForm() {\r\n  const [boardgames, setBoardgames] = useState([]);\r\n  const [tables, setTables] = useState([]);\r\n  const [bookingData, setBookingData] = useState({\r\n    userId: 1, // to be replaced with the actual user ID from authentication later \r\n    tableId: null,\r\n    boardgameId: null,\r\n    bookingDate: '',\r\n    bookingStart: '',\r\n    bookingFinish: '',\r\n  });\r\n\r\n  const handleInputChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setBookingData((prevData) => ({\r\n      ...prevData,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const handleFormSubmit = (event) => {\r\n    event.preventDefault();\r\n    // Send the booking data to the API\r\n    axios.post(API_BOOKINGS_URL, bookingData, {\r\n      headers: {\r\n        'Content-Type': 'BookingFormlication/json',\r\n      },\r\n    })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        // Clear the form after successful submission\r\n        setBookingData({\r\n          userId: 1,\r\n          tableId: null,\r\n          boardgameId: null,\r\n          bookingDate: '',\r\n          bookingStart: '',\r\n          bookingFinish: '',\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n        // Handle error if needed\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Fetch boardgame data\r\n    axios.get(API_BOARDGAMES_URL)\r\n      .then((response) => setBoardgames(response.data))\r\n      .catch((error) => {\r\n        console.error(error);\r\n        // Handle error if needed\r\n      });\r\n\r\n    // Fetch table data\r\n    axios.get(API_TABLES_URL)\r\n      .then((response) => setTables(response.data))\r\n      .catch((error) => {\r\n        console.error(error);\r\n        // Handle error if needed\r\n      });\r\n  }, []);\r\n\r\n   // Generate time options for the select menu based on opening and closing hours\r\n  const generateTimeOptions = () => {\r\n    const openingHour = 11; // Opening hour (in 24-hour format)\r\n    const closingHour = 23; // Closing hour (in 24-hour format)\r\n    const timeOptions = [];\r\n\r\n    for (let hour = openingHour; hour <= closingHour; hour++) {\r\n      for (let minute = 0; minute <= 45; minute += 15) {\r\n        const formattedHour = hour.toString().padStart(2, '0');\r\n        const formattedMinute = minute.toString().padStart(2, '0');\r\n        const time = `${formattedHour}:${formattedMinute}`;\r\n        timeOptions.push(\r\n          <option value={time} key={time}>\r\n            {time}\r\n          </option>\r\n        );\r\n      }\r\n    }\r\n\r\n    return timeOptions;\r\n  };\r\n\r\n  // Generate end time options based on the selected start time\r\n  const generateEndTimeOptions = () => {\r\n    const { bookingStart } = bookingData;\r\n    if (!bookingStart) return []; // Return an empty array if start time is not selected\r\n\r\n    const [startHour, startMinute] = bookingStart.split(':').map(Number);\r\n    const openingHour = 11; // Opening hour (in 24-hour format)\r\n    const closingHour = 23; // Closing hour (in 24-hour format)\r\n    const timeOptions = [];\r\n\r\n    for (let hour = startHour; hour <= closingHour; hour++) {\r\n      const maxMinute = (hour === startHour ? 45 : 60); // Allow full hour only for the start hour\r\n      for (let minute = (hour === startHour ? startMinute : 0); minute <= maxMinute; minute += 15) {\r\n        const formattedHour = hour.toString().padStart(2, '0');\r\n        const formattedMinute = minute.toString().padStart(2, '0');\r\n        const time = `${formattedHour}:${formattedMinute}`;\r\n        timeOptions.push(\r\n          <option value={time} key={time}>\r\n            {time}\r\n          </option>\r\n        );\r\n      }\r\n    }\r\n\r\n    return timeOptions;\r\n  };\r\n\r\n  return (\r\n    <div className=\"BookingForm\">\r\n      <h1>Create Booking</h1>\r\n      <form onSubmit={handleFormSubmit}>\r\n        <TableSelect />\r\n        <br />\r\n        <DateTimeSelect />\r\n        <br />\r\n        <BoardgameSelect />\r\n        <br />\r\n        <button type=\"submit\">Create Booking</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BookingForm;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,eAAe,MAAM,mBAAmB;AAC/C,OAAOC,cAAc,MAAM,kBAAkB;AAC7C,OAAOC,WAAW,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,gBAAgB,GAAG,uCAAuC;AAChE,MAAMC,kBAAkB,GAAG,yCAAyC;AACpE,MAAMC,cAAc,GAAG,qCAAqC;AAE5D,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACrB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACc,MAAM,EAAEC,SAAS,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACgB,WAAW,EAAEC,cAAc,CAAC,GAAGjB,QAAQ,CAAC;IAC7CkB,MAAM,EAAE,CAAC;IAAE;IACXC,OAAO,EAAE,IAAI;IACbC,WAAW,EAAE,IAAI;IACjBC,WAAW,EAAE,EAAE;IACfC,YAAY,EAAE,EAAE;IAChBC,aAAa,EAAE;EACjB,CAAC,CAAC;EAEF,MAAMC,iBAAiB,GAAIC,KAAK,IAAK;IACnC,MAAM;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAGF,KAAK,CAACG,MAAM;IACpCX,cAAc,CAAEY,QAAQ,KAAM;MAC5B,GAAGA,QAAQ;MACX,CAACH,IAAI,GAAGC;IACV,CAAC,CAAC,CAAC;EACL,CAAC;EAED,MAAMG,gBAAgB,GAAIL,KAAK,IAAK;IAClCA,KAAK,CAACM,cAAc,CAAC,CAAC;IACtB;IACA9B,KAAK,CAAC+B,IAAI,CAACzB,gBAAgB,EAAES,WAAW,EAAE;MACxCiB,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC,CAAC,CACCC,IAAI,CAAEC,QAAQ,IAAK;MAClBC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAACG,IAAI,CAAC;MAC1B;MACArB,cAAc,CAAC;QACbC,MAAM,EAAE,CAAC;QACTC,OAAO,EAAE,IAAI;QACbC,WAAW,EAAE,IAAI;QACjBC,WAAW,EAAE,EAAE;QACfC,YAAY,EAAE,EAAE;QAChBC,aAAa,EAAE;MACjB,CAAC,CAAC;IACJ,CAAC,CAAC,CACDgB,KAAK,CAAEC,KAAK,IAAK;MAChBJ,OAAO,CAACI,KAAK,CAACA,KAAK,CAAC;MACpB;IACF,CAAC,CAAC;EACN,CAAC;;EAEDzC,SAAS,CAAC,MAAM;IACd;IACAE,KAAK,CAACwC,GAAG,CAACjC,kBAAkB,CAAC,CAC1B0B,IAAI,CAAEC,QAAQ,IAAKtB,aAAa,CAACsB,QAAQ,CAACG,IAAI,CAAC,CAAC,CAChDC,KAAK,CAAEC,KAAK,IAAK;MAChBJ,OAAO,CAACI,KAAK,CAACA,KAAK,CAAC;MACpB;IACF,CAAC,CAAC;;IAEJ;IACAvC,KAAK,CAACwC,GAAG,CAAChC,cAAc,CAAC,CACtByB,IAAI,CAAEC,QAAQ,IAAKpB,SAAS,CAACoB,QAAQ,CAACG,IAAI,CAAC,CAAC,CAC5CC,KAAK,CAAEC,KAAK,IAAK;MAChBJ,OAAO,CAACI,KAAK,CAACA,KAAK,CAAC;MACpB;IACF,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;;EAEL;EACD,MAAME,mBAAmB,GAAGA,CAAA,KAAM;IAChC,MAAMC,WAAW,GAAG,EAAE,CAAC,CAAC;IACxB,MAAMC,WAAW,GAAG,EAAE,CAAC,CAAC;IACxB,MAAMC,WAAW,GAAG,EAAE;IAEtB,KAAK,IAAIC,IAAI,GAAGH,WAAW,EAAEG,IAAI,IAAIF,WAAW,EAAEE,IAAI,EAAE,EAAE;MACxD,KAAK,IAAIC,MAAM,GAAG,CAAC,EAAEA,MAAM,IAAI,EAAE,EAAEA,MAAM,IAAI,EAAE,EAAE;QAC/C,MAAMC,aAAa,GAAGF,IAAI,CAACG,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;QACtD,MAAMC,eAAe,GAAGJ,MAAM,CAACE,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;QAC1D,MAAME,IAAI,GAAI,GAAEJ,aAAc,IAAGG,eAAgB,EAAC;QAClDN,WAAW,CAACQ,IAAI,eACd/C,OAAA;UAAQqB,KAAK,EAAEyB,IAAK;UAAAE,QAAA,EACjBF;QAAI,GADmBA,IAAI;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEtB,CACV,CAAC;MACH;IACF;IAEA,OAAOb,WAAW;EACpB,CAAC;;EAED;EACA,MAAMc,sBAAsB,GAAGA,CAAA,KAAM;IACnC,MAAM;MAAErC;IAAa,CAAC,GAAGN,WAAW;IACpC,IAAI,CAACM,YAAY,EAAE,OAAO,EAAE,CAAC,CAAC;;IAE9B,MAAM,CAACsC,SAAS,EAAEC,WAAW,CAAC,GAAGvC,YAAY,CAACwC,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAACC,MAAM,CAAC;IACpE,MAAMrB,WAAW,GAAG,EAAE,CAAC,CAAC;IACxB,MAAMC,WAAW,GAAG,EAAE,CAAC,CAAC;IACxB,MAAMC,WAAW,GAAG,EAAE;IAEtB,KAAK,IAAIC,IAAI,GAAGc,SAAS,EAAEd,IAAI,IAAIF,WAAW,EAAEE,IAAI,EAAE,EAAE;MACtD,MAAMmB,SAAS,GAAInB,IAAI,KAAKc,SAAS,GAAG,EAAE,GAAG,EAAG,CAAC,CAAC;MAClD,KAAK,IAAIb,MAAM,GAAID,IAAI,KAAKc,SAAS,GAAGC,WAAW,GAAG,CAAE,EAAEd,MAAM,IAAIkB,SAAS,EAAElB,MAAM,IAAI,EAAE,EAAE;QAC3F,MAAMC,aAAa,GAAGF,IAAI,CAACG,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;QACtD,MAAMC,eAAe,GAAGJ,MAAM,CAACE,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;QAC1D,MAAME,IAAI,GAAI,GAAEJ,aAAc,IAAGG,eAAgB,EAAC;QAClDN,WAAW,CAACQ,IAAI,eACd/C,OAAA;UAAQqB,KAAK,EAAEyB,IAAK;UAAAE,QAAA,EACjBF;QAAI,GADmBA,IAAI;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEtB,CACV,CAAC;MACH;IACF;IAEA,OAAOb,WAAW;EACpB,CAAC;EAED,oBACEvC,OAAA;IAAK4D,SAAS,EAAC,aAAa;IAAAZ,QAAA,gBAC1BhD,OAAA;MAAAgD,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvBpD,OAAA;MAAM6D,QAAQ,EAAErC,gBAAiB;MAAAwB,QAAA,gBAC/BhD,OAAA,CAACF,WAAW;QAAAmD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACfpD,OAAA;QAAAiD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACNpD,OAAA,CAACH,cAAc;QAAAoD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAClBpD,OAAA;QAAAiD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACNpD,OAAA,CAACJ,eAAe;QAAAqD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACnBpD,OAAA;QAAAiD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACNpD,OAAA;QAAQ8D,IAAI,EAAC,QAAQ;QAAAd,QAAA,EAAC;MAAc;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV;AAAC/C,EAAA,CA/HQD,WAAW;AAAA2D,EAAA,GAAX3D,WAAW;AAiIpB,eAAeA,WAAW;AAAC,IAAA2D,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}