{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thiag\\\\Desktop\\\\WEB DEVELOPMENT COURSE NCI\\\\PROJECT\\\\SOFTWARE\\\\tablequest\\\\tablequestapp\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport BookingForm from './components/BookingForm';\nimport Bookings from './components/Bookings';\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BOOKINGS_URL = \"http://localhost:3000/api/v1/bookings\";\nconst API_BOARDGAMES_URL = \"http://localhost:3000/api/v1/boardgames\";\nconst API_TABLES_URL = \"http://localhost:3000/api/v1/tables\";\nfunction App() {\n  _s();\n  const [boardgames, setBoardgames] = useState([]);\n  const [tables, setTables] = useState([]);\n  const [bookingData, setBookingData] = useState({\n    userId: 1,\n    // to be replaced with the actual user ID from authentication later \n    tableId: null,\n    boardgameId: null,\n    bookingDate: '',\n    bookingStart: '',\n    bookingFinish: ''\n  });\n  useEffect(() => {\n    // Fetch boardgame data\n    axios.get(API_BOARDGAMES_URL).then(response => setBoardgames(response.data)).catch(error => {\n      console.error(error);\n      // Handle error if needed\n    });\n\n    // Fetch table data\n    axios.get(API_TABLES_URL).then(response => setTables(response.data)).catch(error => {\n      console.error(error);\n      // Handle error if needed\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(BookingForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"XV4klRJfOCPrflQ4A+mK3LrxAnc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","BookingForm","Bookings","useEffect","useState","axios","jsxDEV","_jsxDEV","API_BOOKINGS_URL","API_BOARDGAMES_URL","API_TABLES_URL","App","_s","boardgames","setBoardgames","tables","setTables","bookingData","setBookingData","userId","tableId","boardgameId","bookingDate","bookingStart","bookingFinish","get","then","response","data","catch","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/thiag/Desktop/WEB DEVELOPMENT COURSE NCI/PROJECT/SOFTWARE/tablequest/tablequestapp/src/App.js"],"sourcesContent":["import React from 'react';\nimport BookingForm from './components/BookingForm';\nimport Bookings from './components/Bookings';\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nconst API_BOOKINGS_URL = \"http://localhost:3000/api/v1/bookings\";\nconst API_BOARDGAMES_URL = \"http://localhost:3000/api/v1/boardgames\";\nconst API_TABLES_URL = \"http://localhost:3000/api/v1/tables\";\n\nfunction App() {\n\n  const [boardgames, setBoardgames] = useState([]);\n  const [tables, setTables] = useState([]);\n  const [bookingData, setBookingData] = useState({\n    userId: 1, // to be replaced with the actual user ID from authentication later \n    tableId: null,\n    boardgameId: null,\n    bookingDate: '',\n    bookingStart: '',\n    bookingFinish: '',\n  });\n\n  useEffect(() => {\n    // Fetch boardgame data\n    axios.get(API_BOARDGAMES_URL)\n      .then((response) => setBoardgames(response.data))\n      .catch((error) => {\n        console.error(error);\n        // Handle error if needed\n      });\n\n    // Fetch table data\n    axios.get(API_TABLES_URL)\n      .then((response) => setTables(response.data))\n      .catch((error) => {\n        console.error(error);\n        // Handle error if needed\n      });\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <BookingForm />\n      <br/>\n      {/* <Bookings /> */}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,WAAW,MAAM,0BAA0B;AAClD,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,gBAAgB,GAAG,uCAAuC;AAChE,MAAMC,kBAAkB,GAAG,yCAAyC;AACpE,MAAMC,cAAc,GAAG,qCAAqC;AAE5D,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAEb,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACW,MAAM,EAAEC,SAAS,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACa,WAAW,EAAEC,cAAc,CAAC,GAAGd,QAAQ,CAAC;IAC7Ce,MAAM,EAAE,CAAC;IAAE;IACXC,OAAO,EAAE,IAAI;IACbC,WAAW,EAAE,IAAI;IACjBC,WAAW,EAAE,EAAE;IACfC,YAAY,EAAE,EAAE;IAChBC,aAAa,EAAE;EACjB,CAAC,CAAC;EAEFrB,SAAS,CAAC,MAAM;IACd;IACAE,KAAK,CAACoB,GAAG,CAAChB,kBAAkB,CAAC,CAC1BiB,IAAI,CAAEC,QAAQ,IAAKb,aAAa,CAACa,QAAQ,CAACC,IAAI,CAAC,CAAC,CAChDC,KAAK,CAAEC,KAAK,IAAK;MAChBC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACpB;IACF,CAAC,CAAC;;IAEJ;IACAzB,KAAK,CAACoB,GAAG,CAACf,cAAc,CAAC,CACtBgB,IAAI,CAAEC,QAAQ,IAAKX,SAAS,CAACW,QAAQ,CAACC,IAAI,CAAC,CAAC,CAC5CC,KAAK,CAAEC,KAAK,IAAK;MAChBC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACpB;IACF,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEvB,OAAA;IAAKyB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClB1B,OAAA,CAACN,WAAW;MAAAiC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACf9B,OAAA;MAAA2B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEF,CAAC;AAEV;AAACzB,EAAA,CAtCQD,GAAG;AAAA2B,EAAA,GAAH3B,GAAG;AAwCZ,eAAeA,GAAG;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}